import * as through from 'through2';
import * as gulp from 'gulp';
import * as gulpUtil from 'gulp-util';


export interface TransformFunction {
    (file: gulpUtil.File, enc, callback: (a?: null, file?: gulpUtil.File) => void): void
}


export interface FlushFunction {
    (cb: () => void): void
}



/**
 * 生成 流插件
 * @param  {string} extname
 * @param {stream.Transform} name loader
 */
export function makeLoader(transform: TransformFunction, flush?: FlushFunction) {
    return through.obj(transform, flush);
}



/**
* 根据glob路径 扫描依赖
* @param glob
*/
export function getFile(glob: string): Promise<gulpUtil.File> {
    return new Promise((resolve, reject) => {
        function getFileStream() {
            return through.obj((file: gulpUtil.File, enc, callback) => {
                resolve(file);
                callback();
            });
        }
        gulp.src(glob, {
            base: './'
        })
            .pipe(getFileStream())
    })
}

